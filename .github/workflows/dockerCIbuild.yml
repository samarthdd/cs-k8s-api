name: Build and Push cs-k8s-api

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - "infra/kubernetes/chart/*"
      - ".github/workflows/*"

env:
  DOCKER_REPO_NAME: samarth7
  GITHUB_SHA: ${{ github.sha }}
  

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.K8GITHUBTOKEN }}

      - name : Docker Login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        run: |
          docker build -t cs-k8s-api --file Dockerfile .

      - name: Push image
        id: push_image
        run: |
          sleep 10
          git fetch --tags --no-recurse-submodules
          
          IMAGE_TAG=$(git tag -l --contains ${GITHUB_SHA} | head -n 1)
          
          if [ -z "$IMAGE_TAG" ]; then
            IMAGE_TAG=$(echo $GITHUB_REF | cut -d'/' -f 3)-${GITHUB_SHA::7}
          fi
          
          branch=$(echo $GITHUB_REF | cut -d'/' -f 3)
          
          docker image tag cs-k8s-api $DOCKER_REPO_NAME/cs-k8s-api:$IMAGE_TAG
          docker image tag cs-k8s-api $DOCKER_REPO_NAME/cs-k8s-api:latest
          docker push $DOCKER_REPO_NAME/cs-k8s-api:$IMAGE_TAG
          
          if [ $branch == 'main' ]; then
            docker push $DOCKER_REPO_NAME/cs-k8s-api:latest
          fi
          
          echo ::set-output name=branch::$branch
          echo ::set-output name=IMAGE_TAG::$IMAGE_TAG
          

      - name: Install yq - portable yaml processor
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update image tag in k8-rebuild repo
        run: |
          IMAGE_TAG=${{ steps.push_image.outputs.IMAGE_TAG }}
          TARGET_BRANCH=${{ steps.push_image.outputs.branch }}
          git config user.email github-actions@github.com
          git config user.name github-actions
          
          
          if [ "${{ steps.push_image.outputs.branch }}" != "main" ]; then
              IMAGE_TAG=$(echo $GITHUB_REF | cut -d'/' -f 3)-${GITHUB_SHA::7}
              git checkout -b $IMAGE_TAG origin/${TARGET_BRANCH}
              # update imagestore selected tag value in the values.yaml file
              yq write infra/kubernetes/chart/values.yaml image.api.tag $IMAGE_TAG -i
              git add infra/kubernetes/chart/values.yaml
              git commit -m 'update image tag'
              git push origin $IMAGE_TAG
              # create a pull request from a new branch to target branch, merge the PR and delete the source branch.
              gh pr create --base ${TARGET_BRANCH} --title "Update ${{ env.IMAGESTORESELECTOR }} image tag to $IMAGE_TAG" --body ""
              sleep 5s
              gh pr merge $IMAGE_TAG -s
              git push origin --delete $IMAGE_TAG
          
          else
              IMAGE_TAG=$(echo $GITHUB_REF | cut -d'/' -f 3)-${GITHUB_SHA::7}
              git checkout -b $IMAGE_TAG origin/develop
              # update imagestore selected tag value in the values.yaml file of develop and main branch
              yq write infra/kubernetes/chart/values.yaml image.api.tag $IMAGE_TAG -i
              git add infra/kubernetes/chart/values.yaml
              git commit -m 'update image tag'
              git push origin $IMAGE_TAG
              
              # create a pull request from a new branch to develop , merge the PR and delete the source branch.
              gh pr create --base develop --title "Update ${{ env.IMAGESTORESELECTOR }} image tag to $IMAGE_TAG" --body ""
              sleep 5s
              gh pr merge $IMAGE_TAG -s
              
              # create a pull request from a new branch to main branch, merge the PR and delete the source branch.
              gh pr create --base main --title "Update ${{ env.IMAGESTORESELECTOR }} image tag to $IMAGE_TAG" --body ""
              sleep 5s
              gh pr merge $IMAGE_TAG -s
              
              
              git push origin --delete $IMAGE_TAG
              
          fi
          
        env:
          GITHUB_TOKEN: ${{ secrets.K8GITHUBTOKEN }}
